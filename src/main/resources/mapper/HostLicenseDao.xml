<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xpu.ctrl.docker.dao.HostLicenseDao">

    <resultMap type="xpu.ctrl.docker.entity.HostLicense" id="HostLicenseMap">
        <result property="licenseId" column="license_id" jdbcType="INTEGER"/>
        <result property="licenseName" column="license_name" jdbcType="VARCHAR"/>
        <result property="licensePasswd" column="license_passwd" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="HostLicenseMap">
        select
          license_id, license_name, license_passwd
        from mydocker.host_license
        where license_id = #{licenseId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="HostLicenseMap">
        select
          license_id, license_name, license_passwd
        from mydocker.host_license
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="HostLicenseMap">
        select
          license_id, license_name, license_passwd
        from mydocker.host_license
        <where>
            <if test="licenseId != null">
                and license_id = #{licenseId}
            </if>
            <if test="licenseName != null and licenseName != ''">
                and license_name = #{licenseName}
            </if>
            <if test="licensePasswd != null and licensePasswd != ''">
                and license_passwd = #{licensePasswd}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="licenseId" useGeneratedKeys="true">
        insert into mydocker.host_license(license_name, license_passwd)
        values (#{licenseName}, #{licensePasswd})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mydocker.host_license
        <set>
            <if test="licenseName != null and licenseName != ''">
                license_name = #{licenseName},
            </if>
            <if test="licensePasswd != null and licensePasswd != ''">
                license_passwd = #{licensePasswd},
            </if>
        </set>
        where license_id = #{licenseId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from mydocker.host_license where license_id = #{licenseId}
    </delete>

</mapper>